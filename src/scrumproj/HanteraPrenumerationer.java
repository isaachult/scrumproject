package scrumproj;
import java.util.ArrayList;
import javax.swing.DefaultListModel;

import oru.inf.InfException;

public class HanteraPrenumerationer extends Page {


    public HanteraPrenumerationer(Application app) {
        super(app);
        initComponents();
    }
    
    @Override
    public void updateInfo() { 
        
        try {
            
        String namn = app.getDataBaseConnection().fetchSingle("SELECT FORNAMN FROM ANVANDARE WHERE ANVANDAR_ID= '" + app.getCurrentUser() + "'"); 
            lblName.setText("Välkommen" + " " +namn+ "!");
            
        }   catch (InfException e) {
            System.err.println(e.getMessage()); 
        }
            
            DefaultListModel kategoriModel = new DefaultListModel();
            DefaultListModel anvandarModel = new DefaultListModel();
            
            kategoriModel.removeAllElements();
            anvandarModel.removeAllElements();
            listKategorier.setModel(kategoriModel);
            listAnvandare.setModel(anvandarModel);
            
            try {
            ArrayList<String> allaKategoriPrenumerationer = app.getDataBaseConnection().fetchColumn("SELECT KATEGORINAMN FROM KATEGORIER JOIN PRENUMERATION_KATEGORI ON KATEGORIER.KATEGORI_ID = PRENUMERATION_KATEGORI.KATEGORI_ID WHERE ANVANDAR_ID = " + app.getCurrentUser());
            
                for (String kategorier : allaKategoriPrenumerationer) {
                    kategoriModel.addElement(kategorier);
                    listKategorier.setModel(kategoriModel);
                }
            } catch (InfException e) {
                System.err.println(e.getMessage()); 
            } catch (NullPointerException npe) {
                System.err.println(npe.getMessage());
            }
            try {
            ArrayList<String> allaAnvandarPrenumerationer = app.getDataBaseConnection().fetchColumn("SELECT FORNAMN FROM ANVANDARE JOIN PRENUMERATION_PROFIL ON ANVANDARE.ANVANDAR_ID = PRENUMERATION_PROFIL.PROFIL_ID WHERE PRENUMERATION_PROFIL.ANVANDAR_ID = " + app.getCurrentUser());
                for (String anvandare : allaAnvandarPrenumerationer) {
                    anvandarModel.addElement(anvandare);
                    listAnvandare.setModel(anvandarModel);
                }
            } catch (InfException e) {
                System.err.println(e.getMessage()); 
            } catch (NullPointerException npe) {
                System.err.println(npe.getMessage());
            }
            
            fillCBoxes();
    }
    
    public void fillCBoxes() {
        ArrayList<String> allaAnvandare = null;
        ArrayList<String> allaKategorier = null;
            boxUser.removeAllItems();
            boxCategory.removeAllItems();
            try {
            allaAnvandare = app.getDataBaseConnection().fetchColumn("SELECT ANVANDAR_ID FROM ANVANDARE");
            allaKategorier = app.getDataBaseConnection().fetchColumn("SELECT KATEGORI_ID FROM KATEGORIER");
             for (String id : allaAnvandare) {
                 String ePost = app.getDataBaseConnection().fetchSingle("SELECT EPOST FROM ANVANDARE WHERE ANVANDAR_ID = '" + id + "'");
                 boxUser.addItem(ePost);
             }
            
             for (String id : allaKategorier) {
                 String  kategoriNamn = app.getDataBaseConnection().fetchSingle("SELECT KATEGORINAMN FROM KATEGORIER WHERE KATEGORI_ID = '" + id + "'");
                 boxCategory.addItem(kategoriNamn);
             }
            
            
            } catch (InfException e) {
                System.err.println(e.getMessage());
            }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        listCategory = new javax.swing.JScrollPane();
        listKategorier = new javax.swing.JList<>();
        lblName = new javax.swing.JLabel();
        lblYourSubscriptions = new javax.swing.JLabel();
        listUser = new javax.swing.JScrollPane();
        listAnvandare = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnRemoveCategory = new javax.swing.JButton();
        btnRemoveProfile = new javax.swing.JButton();
        boxCategory = new javax.swing.JComboBox<>();
        lblNewSubscription = new javax.swing.JLabel();
        btnSubscribeCategory = new javax.swing.JButton();
        btnSubscribeUser = new javax.swing.JButton();
        boxUser = new javax.swing.JComboBox<>();

        setMaximumSize(new java.awt.Dimension(640, 640));
        setMinimumSize(new java.awt.Dimension(640, 640));

        listCategory.setViewportView(listKategorier);

        lblName.setText("txtNamn");

        lblYourSubscriptions.setText("Dina Prenumerationer:");

        listUser.setViewportView(listAnvandare);

        jLabel2.setText("Kategorier");

        jLabel3.setText("Användare");

        btnBack.setText("Tillbaka");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnRemoveCategory.setText("Avsluta prenumeration");
        btnRemoveCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveCategoryActionPerformed(evt);
            }
        });

        btnRemoveProfile.setText("Avsluta prenumeration");
        btnRemoveProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveProfileActionPerformed(evt);
            }
        });

        boxCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boxCategoryActionPerformed(evt);
            }
        });

        lblNewSubscription.setText("Prenumerera på:");

        btnSubscribeCategory.setText("Starta prenumeration");
        btnSubscribeCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubscribeCategoryActionPerformed(evt);
            }
        });

        btnSubscribeUser.setText("Starta prenumeration");
        btnSubscribeUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubscribeUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblYourSubscriptions)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBack)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRemoveCategory)
                            .addComponent(listCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNewSubscription)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(btnSubscribeCategory, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(boxCategory, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(128, 128, 128)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRemoveProfile)
                    .addComponent(jLabel3)
                    .addComponent(listUser, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boxUser, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSubscribeUser))
                .addContainerGap(87, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblName))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(btnBack)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblYourSubscriptions)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(listUser, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                    .addComponent(listCategory))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemoveProfile)
                    .addComponent(btnRemoveCategory))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(lblNewSubscription))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(boxUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(boxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSubscribeUser)
                            .addComponent(btnSubscribeCategory))))
                .addContainerGap(78, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        app.selectPage(app.getPreviousPage());
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnRemoveCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveCategoryActionPerformed
        
        try {
        String chosenSubscription = listKategorier.getSelectedValue();
        System.out.println(chosenSubscription);
        String subscriptionToRemove = app.getDataBaseConnection().fetchSingle("select kategorier.kategori_id from kategorier join prenumeration_kategori on kategorier.kategori_id = prenumeration_kategori.kategori_id where anvandar_id = " + app.getCurrentUser() + " and kategorinamn = '" + chosenSubscription + "'");
        
        if (subscriptionToRemove == null) {
                return;
                
            }   else {
            app.getDataBaseConnection().delete("DELETE FROM PRENUMERATION_KATEGORI WHERE KATEGORI_ID = " + subscriptionToRemove + " and ANVANDAR_ID = " + app.getCurrentUser());
                    
        
                    updateInfo();
        }
        
        
        } catch (InfException e) {
            System.err.println(e.getMessage());
        }
    }//GEN-LAST:event_btnRemoveCategoryActionPerformed

    private void btnRemoveProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveProfileActionPerformed
         try {
        String chosenSubscription = listAnvandare.getSelectedValue();
        System.out.println(chosenSubscription);
        String subscriptionToRemove = app.getDataBaseConnection().fetchSingle("select anvandare.anvandar_id from anvandare join prenumeration_profil on anvandare.anvandar_id = prenumeration_profil.profil_id where prenumeration_profil.anvandar_id = " + app.getCurrentUser() + " and fornamn = '" + chosenSubscription + "'");
        
        if (subscriptionToRemove == null) {
                return;
                
            }   else {
            app.getDataBaseConnection().delete("DELETE FROM PRENUMERATION_PROFIL WHERE PROFIL_ID = " + subscriptionToRemove + " and ANVANDAR_ID = " + app.getCurrentUser());
                    
        
                    updateInfo();
        }
        
        
        } catch (InfException e) {
            System.err.println(e.getMessage());
        }
    }//GEN-LAST:event_btnRemoveProfileActionPerformed

    private void boxCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boxCategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boxCategoryActionPerformed

    private void btnSubscribeCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubscribeCategoryActionPerformed
        
        try {
            String valdPrenumeration = boxCategory.getSelectedItem().toString();
            String valdPrenumerationIndex = app.getDataBaseConnection().fetchSingle("SELECT KATEGORI_ID FROM KATEGORIER WHERE KATEGORINAMN = '" + valdPrenumeration + "'");
            app.getDataBaseConnection().insert("INSERT INTO PRENUMERATION_KATEGORI VALUES (" + app.getCurrentUser() + ", " + valdPrenumerationIndex + ")");
            updateInfo();
        
        } catch (InfException e) {
            System.err.println(e.getMessage());
        }
    }//GEN-LAST:event_btnSubscribeCategoryActionPerformed

    private void btnSubscribeUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubscribeUserActionPerformed
        try {
            String valdPrenumeration = boxUser.getSelectedItem().toString();
            String valdPrenumerationIndex = app.getDataBaseConnection().fetchSingle("SELECT ANVANDAR_ID FROM ANVANDARE WHERE EPOST = '" + valdPrenumeration + "'");
            app.getDataBaseConnection().insert("INSERT INTO PRENUMERATION_PROFIL VALUES (" + app.getCurrentUser() + ", " + valdPrenumerationIndex + ")");
            updateInfo();
        
        } catch (InfException e) {
            System.err.println(e.getMessage());
        }
    }//GEN-LAST:event_btnSubscribeUserActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> boxCategory;
    private javax.swing.JComboBox<String> boxUser;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRemoveCategory;
    private javax.swing.JButton btnRemoveProfile;
    private javax.swing.JButton btnSubscribeCategory;
    private javax.swing.JButton btnSubscribeUser;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblNewSubscription;
    private javax.swing.JLabel lblYourSubscriptions;
    private javax.swing.JList<String> listAnvandare;
    private javax.swing.JScrollPane listCategory;
    private javax.swing.JList<String> listKategorier;
    private javax.swing.JScrollPane listUser;
    // End of variables declaration//GEN-END:variables
}
