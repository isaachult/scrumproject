package scrumproj;

import javax.swing.JOptionPane;
import oru.inf.InfException;

public class AnvandareKontoUppgifter extends Page {
    
    public AnvandareKontoUppgifter(Application app) {
        super(app);
        initComponents();
    }
    
    
    @Override
    public void updateInfo() { 
        lblPasswordChanged.setText("");
        lblConfirmChange.setText("");
        txtNewPassword.setText("");
        txtOldPassword.setText("");
        txtConfirmPassword.setText("");
       
        
        

        try {
            
        String namn = app.getDataBaseConnection().fetchSingle("SELECT FORNAMN FROM ANVANDARE WHERE ANVANDAR_ID= '" + app.getCurrentUser() + "'");
        String efternamn = app.getDataBaseConnection().fetchSingle("SELECT EFTERNAMN FROM ANVANDARE WHERE ANVANDAR_ID = '" + app.getCurrentUser() + "'");
        lblCurrentUser.setText(namn + " " + efternamn);    
            
        String currentEpost = app.getDataBaseConnection().fetchSingle("SELECT EPOST FROM ANVANDARE WHERE ANVANDAR_ID = " + app.getCurrentUser());
            txtEpost.setText(currentEpost);
            
        String currentAdress = app.getDataBaseConnection().fetchSingle("SELECT ADRESS FROM ANVANDARE WHeRE ANVANDAR_ID = " + app.getCurrentUser());
            txtAdress.setText(currentAdress);
            
        String currentPhone = app.getDataBaseConnection().fetchSingle("SELECT TELEFONNUMMER FROM ANVANDARE WHERE ANVANDAR_ID = " + app.getCurrentUser());
            txtPhone.setText(currentPhone);
                
        } catch (InfException e) {
            System.err.println(e.getMessage());
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnConfirmPassWord = new javax.swing.JButton();
        txtOldPassword = new javax.swing.JPasswordField();
        txtNewPassword = new javax.swing.JPasswordField();
        txtConfirmPassword = new javax.swing.JPasswordField();
        lblCurrentPassword = new javax.swing.JLabel();
        lblNewPassword = new javax.swing.JLabel();
        lblConfirmPassword = new javax.swing.JLabel();
        txtEpost = new javax.swing.JTextField();
        lblChangePassword = new javax.swing.JLabel();
        lblPasswordChanged = new javax.swing.JLabel();
        lblChangeUserInformation = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        txtAdress = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        btnConfirmUserInformation = new javax.swing.JButton();
        lblConfirmChange = new javax.swing.JLabel();
        lblCurrentUser = new javax.swing.JLabel();
        lblEpost = new javax.swing.JLabel();
        lblAdress = new javax.swing.JLabel();
        lblPhone = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(640, 640));
        setMinimumSize(new java.awt.Dimension(640, 640));

        btnConfirmPassWord.setText("Byt lösenord");
        btnConfirmPassWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmPassWordActionPerformed(evt);
            }
        });

        txtOldPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOldPasswordActionPerformed(evt);
            }
        });

        txtConfirmPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConfirmPasswordActionPerformed(evt);
            }
        });

        lblCurrentPassword.setText("Nuvarande lösenord");

        lblNewPassword.setText("Nytt lösenord");

        lblConfirmPassword.setText("Bekräfta lösenord");

        txtEpost.setText("Epost");
        txtEpost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEpostActionPerformed(evt);
            }
        });

        lblChangePassword.setText("Byt lösenord");

        lblPasswordChanged.setText("success");

        lblChangeUserInformation.setText("Ändra kontouppgifter");

        btnBack.setText("Tillbaka");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        txtAdress.setText("Adress");

        txtPhone.setText("Telefonnummer");

        btnConfirmUserInformation.setText("Bekräfta nya uppgifter");
        btnConfirmUserInformation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmUserInformationActionPerformed(evt);
            }
        });

        lblConfirmChange.setText("success");

        lblCurrentUser.setText("currentUser");

        lblEpost.setText("E-mail");

        lblAdress.setText("Adress");

        lblPhone.setText("Telefonnummer");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCurrentUser)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblChangePassword)
                            .addComponent(lblNewPassword)
                            .addComponent(lblConfirmPassword)
                            .addComponent(lblPasswordChanged, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtOldPassword, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                                .addComponent(txtNewPassword, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(txtConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(btnConfirmPassWord, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblCurrentPassword, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEpost)
                            .addComponent(lblChangeUserInformation)
                            .addComponent(lblAdress)
                            .addComponent(lblPhone)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnConfirmUserInformation)
                            .addComponent(lblConfirmChange)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtEpost, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtAdress, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)))))
                .addGap(83, 83, 83))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCurrentUser)
                    .addComponent(btnBack))
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChangePassword)
                    .addComponent(lblChangeUserInformation))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCurrentPassword)
                    .addComponent(lblEpost))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtEpost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtOldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNewPassword)
                    .addComponent(lblAdress))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtAdress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblConfirmPassword)
                    .addComponent(lblPhone))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnConfirmUserInformation)
                            .addComponent(btnConfirmPassWord))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblConfirmChange)
                            .addComponent(lblPasswordChanged, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(txtConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(284, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnConfirmPassWordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmPassWordActionPerformed
        //Skapar variabler som tar in det som står i sina respektive lösenordsfält
        String oldPassword = new String(txtOldPassword.getPassword());
        String newPassword = new String(txtNewPassword.getPassword());
        String confirmPassword = new String(txtConfirmPassword.getPassword());
        
        try {
            
                if (!Validering.passwordHarVarde(txtNewPassword) || !Validering.passwordHarVarde(txtOldPassword) || !Validering.passwordHarVarde(txtConfirmPassword)) {
                    lblPasswordChanged.setText("Vänligen fyll i alla fält.");
                    return;
                }
            
                String correctPassword = app.getDataBaseConnection().fetchSingle("SELECT LOSENORD FROM ANVANDARE WHERE ANVANDAR_ID = " + app.getCurrentUser());
                
                if (!correctPassword.equals(oldPassword)) {
                    lblPasswordChanged.setText("Fel lösenord");
                    return;
                }
                
                if (!newPassword.equals(confirmPassword)) {
                    lblPasswordChanged.setText("Det upprepade lösenordet matchar inte.");
                    return;
                }
                
                if (newPassword.length() > 12) {
                    lblPasswordChanged.setText("Lösenordet får innehålla högst 12 tecken.");
                    return;
                }
                
                app.getDataBaseConnection().update("UPDATE ANVANDARE SET LOSENORD = '" + newPassword + "' WHERE ANVANDAR_ID = " + app.getCurrentUser());
                lblPasswordChanged.setText("Lösenordet är uppdaterat!");
                
        } catch (InfException e) {
            JOptionPane.showMessageDialog(null, "Något gick fel, försök igen");
            System.err.println(e.getMessage());
            
        }
    }//GEN-LAST:event_btnConfirmPassWordActionPerformed

    private void txtOldPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOldPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOldPasswordActionPerformed

    private void txtConfirmPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConfirmPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConfirmPasswordActionPerformed

    private void txtEpostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEpostActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEpostActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        app.selectPage(app.getPreviousPage());
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnConfirmUserInformationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmUserInformationActionPerformed
       try {
           if (!Validering.tfHarVarde(txtEpost) || !Validering.tfHarVarde(txtAdress) || !Validering.tfHarVarde(txtPhone)) {
               lblConfirmChange.setText("Kontrollera att inga rutor är tomma.");
               return;
           }
               String updatedEpost = txtEpost.getText();
               String updatedPhone = txtPhone.getText();
               String updatedAdress = txtAdress.getText();
               
               app.getDataBaseConnection().update("UPDATE ANVANDARE SET EPOST = '" + updatedEpost + "' WHERE ANVANDAR_ID = " + app.getCurrentUser());
               app.getDataBaseConnection().update("UPDATE ANVANDARE SET TELEFONNUMMER = '" + updatedPhone + "' WHERE ANVANDAR_ID = " + app.getCurrentUser());
               app.getDataBaseConnection().update("UPDATE ANVANDARE SET ADRESS = '" + updatedAdress + "' WHERE ANVANDAR_ID = " + app.getCurrentUser());
           
           lblConfirmChange.setText("Nya uppgifter har registrerats!");
       } catch (InfException e) {
           System.err.println(e.getMessage());
           JOptionPane.showMessageDialog(null , "Något gick fel, försök igen");
       }
    }//GEN-LAST:event_btnConfirmUserInformationActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnConfirmPassWord;
    private javax.swing.JButton btnConfirmUserInformation;
    private javax.swing.JLabel lblAdress;
    private javax.swing.JLabel lblChangePassword;
    private javax.swing.JLabel lblChangeUserInformation;
    private javax.swing.JLabel lblConfirmChange;
    private javax.swing.JLabel lblConfirmPassword;
    private javax.swing.JLabel lblCurrentPassword;
    private javax.swing.JLabel lblCurrentUser;
    private javax.swing.JLabel lblEpost;
    private javax.swing.JLabel lblNewPassword;
    private javax.swing.JLabel lblPasswordChanged;
    private javax.swing.JLabel lblPhone;
    private javax.swing.JTextField txtAdress;
    private javax.swing.JPasswordField txtConfirmPassword;
    private javax.swing.JTextField txtEpost;
    private javax.swing.JPasswordField txtNewPassword;
    private javax.swing.JPasswordField txtOldPassword;
    private javax.swing.JTextField txtPhone;
    // End of variables declaration//GEN-END:variables
}
