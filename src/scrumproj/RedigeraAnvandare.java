/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package scrumproj;

import javax.swing.JOptionPane;
import oru.inf.InfException;
import java.util.ArrayList;
/**
 *
 * @author alryd
 */
public class RedigeraAnvandare extends Page {

    /**
     * Creates new form SokAnvandare
     */
    public RedigeraAnvandare(Application app) {
        super(app);
        initComponents();
        
    }
    
    @Override
    public void updateInfo() { 
    
        String fraga = "SELECT anvandar_id FROM anvandare";
        

        ArrayList<String> allaAnvandare = null;
            cboxAnvandare.removeAllItems();
            

        try {
            allaAnvandare = app.getDataBaseConnection().fetchColumn(fraga); // hämta alla användarnamn
            
           //En for loop som lägger in användarnas namn i en combobox för vare instans som uppstår.
            for (String id : allaAnvandare) {
                String forNamn = app.getDataBaseConnection().fetchSingle("SELECT fornamn FROM anvandare WHERE anvandar_id = '" + id + "'");
                String efterNamn = app.getDataBaseConnection().fetchSingle("SELECT efternamn FROM anvandare WHERE anvandar_id = '" + id + "'");
                String anvandarId = app.getDataBaseConnection().fetchSingle("SELECT anvandar_id FROM anvandare WHERE anvandar_id = '" + id + "'");
                String epost = app.getDataBaseConnection().fetchSingle("SELECT epost FROM anvandare WHERE anvandar_id = '" + id + "'" );
                cboxAnvandare.addItem(epost + " " + forNamn + " " + efterNamn);
            }
            
            
           

        } catch (InfException e) {
            JOptionPane.showMessageDialog(null, e);
        } catch (Exception ettUndantag) {
            JOptionPane.showMessageDialog(null, "Ett fel uppstod!");
            System.out.println("Internt felmeddelande" + ettUndantag.getMessage());
        }
        
        
    }
    
    
    
    
   
        
        
        
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cboxAnvandare = new javax.swing.JComboBox<>();
        btnRedigera = new javax.swing.JButton();
        lblValjAnvandare = new javax.swing.JLabel();
        lblEpost = new javax.swing.JLabel();
        lblLosenord = new javax.swing.JLabel();
        lblFornamn = new javax.swing.JLabel();
        lblEfternamn = new javax.swing.JLabel();
        lblTelefonNummer = new javax.swing.JLabel();
        lblAdress = new javax.swing.JLabel();
        checkBoxAdmin = new javax.swing.JCheckBox();
        txtFieldEpost = new javax.swing.JTextField();
        passwordFieldLosenord = new javax.swing.JPasswordField();
        txtFieldFornamn = new javax.swing.JTextField();
        txtFieldEfternamn = new javax.swing.JTextField();
        txtFieldTelefonnummer = new javax.swing.JTextField();
        txtFieldAdress = new javax.swing.JTextField();
        btnStarta = new javax.swing.JButton();

        cboxAnvandare.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboxAnvandare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxAnvandareActionPerformed(evt);
            }
        });

        btnRedigera.setText("Redigera uppgifter");
        btnRedigera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRedigeraActionPerformed(evt);
            }
        });

        lblValjAnvandare.setText("Välj användare");

        lblEpost.setText("Epost");

        lblLosenord.setText("Lösenord");

        lblFornamn.setText("Förnamn");

        lblEfternamn.setText("Efternamn");

        lblTelefonNummer.setText("Telefonnummer");

        lblAdress.setText("Adress");

        checkBoxAdmin.setText("Admin");

        btnStarta.setText("Hämta uppgifter");
        btnStarta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lblValjAnvandare, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cboxAnvandare, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(btnStarta))
                .addGap(127, 127, 127)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRedigera)
                    .addComponent(checkBoxAdmin)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFornamn)
                            .addComponent(lblLosenord)
                            .addComponent(lblEpost))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFieldEpost, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passwordFieldLosenord, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFieldFornamn, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(lblEfternamn)
                            .addGap(27, 27, 27)
                            .addComponent(txtFieldEfternamn, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lblTelefonNummer)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(lblAdress)
                                    .addGap(47, 47, 47)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtFieldTelefonnummer)
                                .addComponent(txtFieldAdress)))))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblValjAnvandare)
                    .addComponent(lblEpost)
                    .addComponent(txtFieldEpost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboxAnvandare, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLosenord)
                    .addComponent(passwordFieldLosenord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFornamn)
                    .addComponent(txtFieldFornamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnStarta))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEfternamn)
                    .addComponent(txtFieldEfternamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTelefonNummer)
                    .addComponent(txtFieldTelefonnummer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAdress)
                    .addComponent(txtFieldAdress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(checkBoxAdmin)
                .addGap(18, 18, 18)
                .addComponent(btnRedigera)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRedigeraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRedigeraActionPerformed
        
        
        try {
            String valtNamn = cboxAnvandare.getSelectedItem().toString();
            if (valtNamn.contains(" ")) {
                valtNamn = valtNamn.substring(0, valtNamn.indexOf(" "));
            }

            String anvandarId = app.getDataBaseConnection().fetchSingle("Select anvandar_id from anvandare where epost ='" + valtNamn + "'");

            String nyEmail = txtFieldEpost.getText();
            String nyttFornamn = txtFieldFornamn.getText();
            String nyttEfternamn = txtFieldEfternamn.getText();
            String nyttTelefonnummer = txtFieldTelefonnummer.getText();
            String nyAdress = txtFieldAdress.getText();
            String adminStatus = " ";
            if (checkBoxAdmin.isSelected()) {
                adminStatus = ("J");
            } else {
                adminStatus = ("N");
            }

            app.getDataBaseConnection().update(("UPDATE anvandare SET fornamn = " + "'" + nyttFornamn + "'" + ", " + "telefonnummer = " + "'" + nyttTelefonnummer + "'" + ", " + "efternamn = " + "'" + nyttEfternamn + "'" + ", " + "adress = " + "'" + nyAdress + "'" + ", " + "adminstatus = " + "'" + adminStatus + "'" + "WHERE anvandar_id = " + "'" + anvandarId + "'"));
            updateInfo();
        }
        
        catch (InfException e)
        {
            JOptionPane.showMessageDialog(null, "Något blev fel, försök igen!");
            System.err.println(e);
        }
        
        
    }//GEN-LAST:event_btnRedigeraActionPerformed

    private void cboxAnvandareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxAnvandareActionPerformed
        //SetUppgifter();
    }//GEN-LAST:event_cboxAnvandareActionPerformed

    private void btnStartaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartaActionPerformed
        try
        {
            // Trimma strängen så att endast den unika eposten hämtas
        String valtNamn = cboxAnvandare.getSelectedItem().toString();
            if (valtNamn.contains(" ")) {
                valtNamn = valtNamn.substring(0, valtNamn.indexOf(" "));
            }
            
            
        String anvandarId = app.getDataBaseConnection().fetchSingle("Select anvandar_id from anvandare where epost ='" + valtNamn + "'");
        
        // Hämta den valda användarens uppgifter
        txtFieldEpost.setText(app.getDataBaseConnection().fetchSingle("Select epost from anvandare where anvandar_id ='" + anvandarId + "'"));
        txtFieldTelefonnummer.setText(app.getDataBaseConnection().fetchSingle("Select telefonnummer from anvandare where anvandar_id ='" + anvandarId + "'"));
        passwordFieldLosenord.setText(app.getDataBaseConnection().fetchSingle("Select losenord from anvandare where anvandar_id ='" + anvandarId + "'"));
        txtFieldFornamn.setText(app.getDataBaseConnection().fetchSingle("Select fornamn from anvandare where anvandar_id ='" + anvandarId + "'"));
        txtFieldEfternamn.setText(app.getDataBaseConnection().fetchSingle("Select efternamn from anvandare where anvandar_id ='" + anvandarId + "'"));
        txtFieldTelefonnummer.setText(app.getDataBaseConnection().fetchSingle("Select telefonnummer from anvandare where anvandar_id ='" + anvandarId + "'"));
        txtFieldAdress.setText(app.getDataBaseConnection().fetchSingle("Select adress from anvandare where anvandar_id ='" + anvandarId + "'"));
        
        String adminStatus = (app.getDataBaseConnection().fetchSingle("Select adminstatus from anvandare where anvandar_id ='" + anvandarId + "'"));
        if (adminStatus.equals("J"))
        {
            checkBoxAdmin.setSelected(true);
        }
        else if (adminStatus.equals("N"))
        {
            checkBoxAdmin.setSelected(false);
        }
        
        }
        catch (InfException e)
        {
            JOptionPane.showMessageDialog(null, "Något blev fel, försök igen!");
            System.err.println(e);
        }
        
    }//GEN-LAST:event_btnStartaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRedigera;
    private javax.swing.JButton btnStarta;
    private javax.swing.JComboBox<String> cboxAnvandare;
    private javax.swing.JCheckBox checkBoxAdmin;
    private javax.swing.JLabel lblAdress;
    private javax.swing.JLabel lblEfternamn;
    private javax.swing.JLabel lblEpost;
    private javax.swing.JLabel lblFornamn;
    private javax.swing.JLabel lblLosenord;
    private javax.swing.JLabel lblTelefonNummer;
    private javax.swing.JLabel lblValjAnvandare;
    private javax.swing.JPasswordField passwordFieldLosenord;
    private javax.swing.JTextField txtFieldAdress;
    private javax.swing.JTextField txtFieldEfternamn;
    private javax.swing.JTextField txtFieldEpost;
    private javax.swing.JTextField txtFieldFornamn;
    private javax.swing.JTextField txtFieldTelefonnummer;
    // End of variables declaration//GEN-END:variables
}

